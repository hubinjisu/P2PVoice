package com.hubin.android.p2pvoice.bean.dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import android.os.Parcel;
import android.os.Parcelable;

import java.util.Date;

/**
 * Entity mapped to table POINTER.
 */
public class Pointer implements Parcelable
{

    private Long id;
    private java.util.Date createDate;
    private String name;
    /** Not-null value. */
    private String ip;
    private Integer port;
    private Integer audioSampleRate;
    private Boolean isRecordSend;
    private Boolean isRecordReceive;

    public Pointer() {
    }

    public Pointer(Long id) {
        this.id = id;
    }

    public Pointer(Long id, java.util.Date createDate, String name, String ip, Integer port, Integer audioSampleRate, Boolean isRecordSend, Boolean isRecordReceive) {
        this.id = id;
        this.createDate = createDate;
        this.name = name;
        this.ip = ip;
        this.port = port;
        this.audioSampleRate = audioSampleRate;
        this.isRecordSend = isRecordSend;
        this.isRecordReceive = isRecordReceive;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public java.util.Date getCreateDate() {
        return createDate;
    }

    public void setCreateDate(java.util.Date createDate) {
        this.createDate = createDate;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /** Not-null value. */
    public String getIp() {
        return ip;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setIp(String ip) {
        this.ip = ip;
    }

    public Integer getPort() {
        if (port != null)
            return port.intValue();
        else
            return 0;
    }

    public void setPort(Integer port) {
        this.port = port;
    }

    public Integer getAudioSampleRate() {
        if (audioSampleRate != null)
            return audioSampleRate.intValue();
        else
            return 0;
    }

    public void setAudioSampleRate(Integer audioSampleRate) {
        this.audioSampleRate = audioSampleRate;
    }

    public Boolean getIsRecordSend() {
        if (isRecordSend != null)
            return isRecordSend.booleanValue();
        else
            return false;
    }

    public void setIsRecordSend(Boolean isRecordSend) {
        this.isRecordSend = isRecordSend;
    }

    public Boolean getIsRecordReceive() {
        if (isRecordReceive != null)
            return isRecordReceive.booleanValue();
        else
            return false;
    }

    public void setIsRecordReceive(Boolean isRecordReceive) {
        this.isRecordReceive = isRecordReceive;
    }

    @Override
    public int describeContents()
    {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags)
    {
        dest.writeValue(this.id);
        dest.writeLong(this.createDate != null ? this.createDate.getTime() : -1);
        dest.writeString(this.name);
        dest.writeString(this.ip);
        dest.writeValue(this.port);
        dest.writeValue(this.audioSampleRate);
        dest.writeValue(this.isRecordSend);
        dest.writeValue(this.isRecordReceive);
    }

    protected Pointer(Parcel in)
    {
        this.id = (Long) in.readValue(Long.class.getClassLoader());
        long tmpCreateDate = in.readLong();
        this.createDate = tmpCreateDate == -1 ? null : new Date(tmpCreateDate);
        this.name = in.readString();
        this.ip = in.readString();
        this.port = (Integer) in.readValue(Integer.class.getClassLoader());
        this.audioSampleRate = (Integer) in.readValue(Integer.class.getClassLoader());
        this.isRecordSend = (Boolean) in.readValue(Boolean.class.getClassLoader());
        this.isRecordReceive = (Boolean) in.readValue(Boolean.class.getClassLoader());
    }

    public static final Parcelable.Creator<Pointer> CREATOR = new Parcelable.Creator<Pointer>()
    {
        @Override
        public Pointer createFromParcel(Parcel source)
        {
            return new Pointer(source);
        }

        @Override
        public Pointer[] newArray(int size)
        {
            return new Pointer[size];
        }
    };
}
